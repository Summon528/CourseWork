#!/usr/local/bin/bash

check_dataset() {
    if [[ -z "$1" ]]; then
        echo "please specify dataset"
        exit 1
    fi
    if ! zfs list "$1" 1>/dev/null 2>/dev/null; then
        echo "dataset $1 does not exist"
        exit 1
    fi
}

create() {
    local dataset=$1
    local rotation="20"
    if [[ $2 =~ [0-9]+ ]]; then
        rotation=$2
    fi
    check_dataset "$dataset"
    local snapshot_list="$(zfs list -s creation -Ht snapshot -o name,creation | grep "$dataset"@zbackup)"
    local max_id="$(zfs list -Ht snapshot | sed -E "s/.*@zbackup\-([0-9]+).*/\1/" | sort -rn | head -n 1)"
    local snapshot_cnt="$(echo "$snapshot_list" | wc -l)"
    if [[ -z "$max_id" ]]; then
        max_id="0"
    fi
    if (( snapshot_cnt + 1 > rotation )); then
        local rm_cnt=$((snapshot_cnt + 1 - rotation))
        echo "$snapshot_list" | head -n "$rm_cnt" | while IFS= read -r snap; do
            snap_name="$(echo "$snap" | cut -f 1)"
            snap_time="$(echo "$snap" | cut -f 2)"
            printf "Rotate %s %s\n" "$snap_name" "$snap_time"
            zfs destroy "$snap_name"
        done
    fi
    (( max_id++ ))
    zfs snapshot "$dataset"@zbackup-"$max_id"
    printf "Snap %s %s\n" "$dataset"@zbackup-"$max_id" "$(date)"
}

list() {
    local dataset=$2
    printf "ID\tDataset\t\tTime\n"
    zfs list -Ht snapshot -o name,creation | grep "$dataset"@zbackup | while IFS= read -r snap; do
        printf "%s" "$(echo "$snap" | cut -f 1 | cut -d "-" -f 2)"
        printf "\t"
        printf "%s" "$(echo "$snap" | cut -f 1 | cut -d "@" -f 1)"
        printf "\t"
        printf "%s" "$(echo "$snap" | cut -f 2)"
        printf "\n"
    done
}

delete() {
    local dataset=$2
    check_dataset "$dataset"
    if [[ $3 =~ [0-9]+ ]]; then
        echo "Removing $dataset"@zbackup-"$3"
        zfs destroy "$dataset"@zbackup-"$3"
        return
    fi
    zfs list -Ht snapshot | grep "$dataset"@zbackup | cut -f 1 | while IFS= read -r snap; do
        echo "Removing $snap"
        zfs destroy "$snap"
    done
}

do_export() {
    local dataset=$2
    local id="1"
    if [[ $3 =~ [0-9]+ ]]; then
        id=$3
    fi
    check_dataset "$dataset"@zbackup-"$id"
    zfs send "$dataset"@zbackup-"$id" | xz -z | openssl enc -e -aes256 -out "${dataset##*/}"@"$(date +%Y-%m-%d)".xz.sec
}

import() {
    local dataset=$2
    check_dataset "$dataset"
    openssl enc -d -aes256 -in "$3" | xz -d | zfs recv -F "$dataset"
}

cmd="--create"
if [[ "$1" =~ ^--.* ]]; then
    cmd=$1
fi

if [[ $EUID -ne 0 ]] && [[ $cmd != "--list" ]]; then
   echo "Please run as root" 1>&2
   exit 1
fi

case $cmd in
    "--create") create "$@";;
    "--list") list "$@";;
    "--delete") delete "$@";;
    "--export") do_export "$@";;
    "--import") import "$@";;
    *) echo "Command Not Found"; exit 1;;
esac
